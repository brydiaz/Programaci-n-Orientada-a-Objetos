/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.util.ArrayList;
import modelado.Cliente;
import modelado.Ingrediente;
import modelado.Platillo;

/**
 *
 * @author bryan
 */
public class pantallaCliente extends javax.swing.JFrame {

    /**
     * Creates new form prototipo
     */
    Cliente actual;
    ArrayList<Platillo> oferta;
    ArrayList<Platillo> compra;
    ArrayList<Platillo> recomendados;
    public pantallaCliente(Cliente actual,ArrayList<Platillo> oferta) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.actual=actual;
        this.oferta=oferta;
        this.recomendados=new ArrayList();
        this.compra=new ArrayList();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAct = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtCantidad = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelConfirmar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 400));
        getContentPane().setLayout(null);

        jButton1.setText("Ver Menú del Día");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(15, 269, 164, 25);

        jButton2.setText("Proceder Con Compra");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(320, 270, 164, 25);

        txtAct.setColumns(20);
        txtAct.setRows(5);
        jScrollPane1.setViewportView(txtAct);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(102, 16, 384, 224);

        jButton3.setText("Volver");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(410, 310, 72, 25);

        jButton4.setText("Añadir a carrito");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(20, 310, 125, 25);
        getContentPane().add(txtCantidad);
        txtCantidad.setBounds(240, 340, 130, 25);
        getContentPane().add(txtNombre);
        txtNombre.setBounds(240, 310, 130, 25);

        jLabel1.setText("Cantidad:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(170, 340, 57, 19);

        jLabel2.setText("Nombre:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(170, 310, 53, 19);
        getContentPane().add(labelConfirmar);
        labelConfirmar.setBounds(370, 350, 70, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/Recursos Graficos/PantallaCliente.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setMinimumSize(new java.awt.Dimension(500, 400));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, -10, 550, 470);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ArrayList<String>platillosQueConsume= actual.getPerfilAlimenticio().getCategoriasQueGusta();
        ArrayList<Platillo> noComestibles= new ArrayList();
        for(int j=0;j<oferta.size();j++){
          
            
            ArrayList<Ingrediente>ingArevisar= oferta.get(j).getIngredientes();
            for(int i=0;i<platillosQueConsume.size();i++){
                String categoria= platillosQueConsume.get(i);
                switch(categoria){
                    case "Vegetarian@":
                        for(int k=0;k<ingArevisar.size();k++){
                            for(int y=0; y<ingArevisar.get(k).getTiposDeIngrediente().size();y++){
                                String etiqueta=ingArevisar.get(k).getTiposDeIngrediente().get(y);
                                if(etiqueta.equals("Carne")){
                                    noComestibles.add(oferta.get(j));
                                }else if(etiqueta.equals("Carne de cerdo")){
                                    noComestibles.add(oferta.get(j));
                                }else if(etiqueta.equals("Sangre")){
                                    noComestibles.add(oferta.get(j));
                                }
                            }  
                        }
                        break;
                    case "Vegan@":
                        for(int k=0;k<ingArevisar.size();k++){
                            for(int y=0; y<ingArevisar.get(k).getTiposDeIngrediente().size();y++){
                                String etiqueta=ingArevisar.get(k).getTiposDeIngrediente().get(y);
                                if(etiqueta.equals("Origen animal")){
                                    noComestibles.add(oferta.get(j));
                                }else if(etiqueta.equals("Carne")){
                                    noComestibles.add(oferta.get(j));
                                }else if(etiqueta.equals("Carne de cerdo")){
                                    noComestibles.add(oferta.get(j));
                                }else if(etiqueta.equals("Sangre")){
                                    noComestibles.add(oferta.get(j));
                                }
                            }  
                        }
                        break;
                    case "Libre de gluten":
                        for(int k=0;k<ingArevisar.size();k++){
                            Ingrediente etiqueta=ingArevisar.get(k);
                            if(etiqueta.isGluten()){
                                noComestibles.add(oferta.get(j));
                            }
                        }
                        break;
                    case "Kosher":
                        for(int k=0;k<ingArevisar.size();k++){
                            Ingrediente etiqueta=ingArevisar.get(k);
                            if(etiqueta.isAnimalConPesuña()==false){
                                noComestibles.add(oferta.get(j));
                            }
                        }
                        break;
                    case "Halal":
                        for(int k=0;k<ingArevisar.size();k++){
                            for(int y=0; y<ingArevisar.get(k).getTiposDeIngrediente().size();y++){
                                String etiqueta=ingArevisar.get(k).getTiposDeIngrediente().get(y);
                                if(etiqueta.equals("Carne de cerdo")){
                                    noComestibles.add(oferta.get(j));
                                }
                                else if(etiqueta.equals("Sangre")){
                                    noComestibles.add(oferta.get(j));
                                }else if(etiqueta.equals("Alcohol")){
                                    noComestibles.add(oferta.get(j));
                                }
                            }  
                        }
                        break;
                    case "SL":
                        recomendados= oferta;
                }
                
            }
        }

        ArrayList<Platillo> temp= new ArrayList();
        temp=oferta;
        for(int i=0; i<noComestibles.size();i++){
            for(int j=0; j<temp.size();j++){
                if(noComestibles.get(i).equals(temp.get(j))){
                    temp.remove(j);
                }
            }
        }
        recomendados=temp;
        
        for(int i=0;i<recomendados.size();i++){
            ArrayList<Ingrediente> posiblesAlergias= recomendados.get(i).getIngredientes();
            for(int j=0;j<posiblesAlergias.size();j++){
                ArrayList<String> alergias= actual.getPerfilAlimenticio().getAlergiasAIngredientes();
                for(int k=0;k<alergias.size();k++){
                    if(posiblesAlergias.get(j).getNombre().equals(alergias.get(k))){
                        recomendados.remove(i);
                    }
                }
            }
        }
        this.txtAct.setText(recomendados.toString());

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String nombreABuscar=this.txtNombre.getText();
        int cantidadDeseada=Integer.parseInt(this.txtCantidad.getText());
        for(int i=0; i<recomendados.size();i++){
            if(nombreABuscar.equals(recomendados.get(i).getNombre())){
                if(cantidadDeseada*recomendados.get(i).getCosto()>actual.getDinero()){
                    this.labelConfirmar.setText("No alcanza!");
                }else{
                    this.labelConfirmar.setText("Añadido");
                    recomendados.get(i).setCantidad(cantidadDeseada);
                    compra.add(recomendados.get(i));
                }
            }else{
                System.out.println("Buscando....");
            }
        }
        this.txtNombre.setText("");
        this.txtCantidad.setText("");
        System.out.println(compra.toString());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        pantallaFactura facturaFinal= new pantallaFactura(compra);
        facturaFinal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelConfirmar;
    private javax.swing.JTextArea txtAct;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
